apiVersion: v1
kind: ConfigMap
metadata:
  name: http-api-gateway-config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        upstream http_backend {
            server http-service:8080;
            keepalive 32;
        }

        # Rate limiting zone
        limit_req_zone $binary_remote_addr zone=http_limit:10m rate=10r/s;

        server {
            listen 80;
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 'healthy\n';
            }

            location /http/ {
                # Rate limiting
                limit_req zone=http_limit burst=20 nodelay;
                
                # Proxy settings
                proxy_pass http://http_backend/;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # Circuit breaker
                proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
                proxy_next_upstream_tries 3;
                proxy_next_upstream_timeout 10s;

                # Timeouts
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;

                # Buffer settings
                proxy_buffer_size 8k;
                proxy_buffers 8 8k;
                proxy_busy_buffers_size 16k;

                # Logging
                access_log /var/log/nginx/http_access.log combined buffer=512k flush=1m;
                error_log /var/log/nginx/http_error.log warn;
            }
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-service
  namespace: http-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-service
  template:
    metadata:
      labels:
        app: http-service
    spec:
      containers:
      - name: tcc3-http
        image: tcc3-http:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: http-service
  namespace: http-gateway
spec:
  selector:
    app: http-service
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: http-api-gateway
  template:
    metadata:
      labels:
        app: http-api-gateway
    spec:
      containers:
      - name: nginx
        image: nginx:1.25
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: http-api-gateway-config
---
apiVersion: v1
kind: Service
metadata:
  name: http-api-gateway
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    name: http
  selector:
    app: http-api-gateway 