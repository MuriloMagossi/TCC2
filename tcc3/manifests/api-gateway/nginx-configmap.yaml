apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-gateway-conf
  namespace: nginx-gateway
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }

    http {
      upstream http_backend {
        server http-service.http-gateway.svc.cluster.local:8080;
      }

      upstream https_backend {
        server https-service.https-gateway.svc.cluster.local:8443;
      }

      upstream websocket_backend {
        server websocket-service.websocket-gateway.svc.cluster.local:8081;
      }

      upstream graphql_backend {
        server graphql-service.graphql-gateway.svc.cluster.local:8082;
      }

      server {
        listen 8000;
        
        location /http {
          proxy_pass http://http_backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
      }

      server {
        listen 8443 ssl;
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        
        location /https {
          proxy_pass https://https_backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
      }

      server {
        listen 8001;
        
        location /websocket {
          proxy_pass http://websocket_backend;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
      }

      server {
        listen 8002;
        
        location /graphql {
          proxy_pass http://graphql_backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
      }
    }

    stream {
      upstream tcp_backend {
        server tcp-service.tcp-gateway.svc.cluster.local:8083;
      }

      server {
        listen 9000;
        proxy_pass tcp_backend;
      }
    } 